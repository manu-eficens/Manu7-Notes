# grafana, promtail, loki 
https://github.com/easydeploy-cloud/loki_promtail_grafana_kubernetes/tree/main
# loki-stack helm repo 
https://github.com/grafana/helm-charts/tree/main/charts/loki-stack

helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
helm search repo Grafana

kubectl create ns loki-stack

#values file 
# loki.yml
loki:
  enabled: true
  persistence:
    enabled: true
    storageClassName: gp2  # Replace with your storage class if different
    accessModes:
      - ReadWriteOnce
    size: 50Gi  # Set your desired storage size for Loki

promtail:
  enabled: true

prometheus:
  enabled: true

grafana:
  enabled: true
  persistence:
    enabled: true
    storageClassName: gp2  # Replace with your storage class if different
    accessModes:
      - ReadWriteOnce
    size: 10Gi  # Set your desired storage size for Grafana
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "alb"
      service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
      service.beta.kubernetes.io/aws-load-balancer-subnets: "subnet-0023ff4bd4abcrevcreg4e6e6,subnet-025a0fdgf0cbb2e8f88ac,subnet-0adc595fdgcfdfhabd8d30780,subnet-0fe8e4sfsgcdf50bc917d52c"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
  adminUser: ""          # Specify the admin username
  adminPassword: ""  # Specify a permanent password

  loki:
    config:
      table_manager:
        retention_deletes_enabled: true
        retention_period: 360h # Retain logs for 15 days
      compactor:
        retention_enabled: true
        retention_period: 360h # Retain logs for 15 days


helm install loki grafana/loki-stack --values loki.yml -n loki-stack

kubectl get secret --namespace default loki-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
                                          (or)
 kubectl get secret --namespace loki-stack loki-grafana -o jsonpath="{.data.admin-password}" | ForEach-Object { [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String($_)) }


dashboard 15141


helm upgrade loki grafana/loki-stack --values loki.yml -n loki-stack

-----------------------------------------------------------------------------------------------------------------------
# installation of prometheus and grafana 
https://sunitabachhav2007.hashnode.dev/prometheus-and-grafana-dashboard-on-eks-cluster-using-helm-chart   (including ebs csi drivers)
https://archive.eksworkshop.com/intermediate/240_monitoring/prereqs/  (normal direct approach)
https://docs.aws.amazon.com/eks/latest/userguide/prometheus.html  (aws documentation approach)

# install matrix server
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

# oidc provider
oidc_id=$(aws eks describe-cluster --name cms-eks --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4

eksctl utils associate-iam-oidc-provider --cluster cms-eks --approve

# iamserviceaccount 
eksctl create iamserviceaccount \
  --name ebs-csi-controller-sa \
  --namespace kube-system \
  --cluster cms-eks \
  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
  --approve \
  --role-only \
  --role-name AmazonEKS_EBS_CSI_DriverRole

eksctl create addon --name aws-ebs-csi-driver --cluster cms-eks --service-account-role-arn arn:aws:iam::238393102293:role/AmazonEKS_EBS_CSI_DriverRole --force

# install prometheus
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm repo list

kubectl create namespace prometheus
helm install prometheus prometheus-community/prometheus \
--namespace prometheus \
--set alertmanager.persistentVolume.storageClass="gp2" \
--set server.persistentVolume.storageClass="gp2"

helm install prometheus prometheus-community/prometheus --namespace prometheus --set alertmanager.persistentVolume.storageClass="gp2" --set server.persistentVolume.storageClass="gp2"

# port forward
kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
-------------------------------------------------------------------------------------------------------------------------------------

# install grafana

# add grafana Helm repo
helm repo add grafana https://grafana.github.io/helm-charts

mkdir ${HOME}/environment/grafana
# grafana.yaml
enabled: true
storageClassName: gp2
adminPassword: EKS!sAWSome
service:
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "alb"  # Use "alb" for Application Load Balancer
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-subnets: "subnet-0fe8e450brefregc917d52c,subnet-0023ff4bdcreg4ab4e6e6,subnet-025a00xqwrcbb2e8f88ac,subnet-0adc595aewtbd8d30780" 
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"  # Set to "internal" for internal ALB
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server.prometheus.svc.cluster.local
        access: proxy
        isDefault: true

kubectl create namespace grafana

helm install grafana grafana/grafana \
    --namespace grafana \
    --set persistence.storageClassName="gp2" \
    --set persistence.enabled=true \
    --set adminPassword='EKS!sAWSome' \
    --values ${HOME}/environment/grafana/grafana.yaml \
    --set service.type=LoadBalancer

    helm install grafana grafana/grafana --namespace grafana --set persistence.storageClassName="gp2" --set persistence.enabled=true --set adminPassword=Spark@123 --values C:\Users\manmadhab.EFICENS/grafana/grafana.yaml --set service.type=LoadBalancer

export ELB=$(kubectl get svc -n grafana grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
echo "http://$ELB"

kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

# cluster monitoring dashboard ---------> 3119
# pods monitoring dashboard ---------> 6417
# Kubernetes Cluster State ------------> 12105
# Kubernetes Node Metrics --------------> 1860


---------------------------------------------------------------------------------------------------------------------
# iamserviceaccount 
eksctl create iamserviceaccount --name ebs-csi-controller-sa --namespace kube-system --cluster spark-dev --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy --approve --role-only --role-name AmazonEKS_EBS_CSI_DriverRole

eksctl create addon --name aws-ebs-csi-driver --cluster spark-dev --service-account-role-arn arn:aws:iam::424258464218:role/AmazonEKS_EBS_CSI_DriverRole --force

# install prometheus
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm repo list

kubectl create namespace prometheus
helm install prometheus prometheus-community/prometheus --namespace prometheus --set alertmanager.persistentVolume.storageClass="gp2" --set server.persistentVolume.storageClass="gp2"
# port forward
kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
localhost:8080

----------------------------------------------------------------------------

kubectl create namespace loki
helm install loki grafana/loki-stack --namespace loki --set grafana.enabled=false --set promtail.enabled=false
helm install promtail grafana/loki-stack --namespace loki --set loki.enabled=false --set promtail.enabled=true --set promtail.config.lokiAddress="http://loki:3100/loki/api/v1/push"
     or 
------------------------------------------------------------------------------------------------------------------------------------------
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update

kubectl create namespace loki
helm install loki grafana/loki-stack \
    --namespace loki \
    --set grafana.enabled=false \
    --set promtail.enabled=false

helm install promtail grafana/loki-stack \
    --namespace loki \
    --set loki.enabled=false \
    --set promtail.enabled=true \
    --set promtail.config.lokiAddress="http://loki:3100/loki/api/v1/push"

In the Grafana UI, go to Configuration > Data Sources.
Add a new data source:
Select Loki as the data source type.
Use the Loki URL (http://loki.loki.svc.cluster.local:3100) as the data source URL.
Save and test the data source configuration.

-------------------------------------------------------------------------------------------------------------------------------------------------------
# approach with custom  values.yaml
promtail:
  config:
    clients:
      - url: http://loki.loki.svc.cluster.local:3100/loki/api/v1/push
    positions:
      filename: /data/positions.yaml
    server:
      http_listen_port: 9080
    scrape_configs:
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
        static_configs:
          - targets:
              - localhost
            labels:
              job: kubernetes-pods
              __path__: /var/log/pods/*/*/*.log

helm install promtail grafana/loki-stack \
    --namespace loki \
    --values promtail-values.yaml
 ------------------------------------------------------------

kubectl create namespace loki

helm install loki grafana/loki-distributed --namespace loki --set storageClassName=gp2 --set persistence.enabled=true

helm install promtail grafana/promtail --namespace loki \
  --set config.clients[0].url=http://loki.loki.svc.cluster.local:3100/loki/api/v1/push \
  --set config.scrape_configs[0].job_name=kubernetes-pods \
  --set config.scrape_configs[0].kubernetes_sd_configs[0].role=pod \
  --set config.scrape_configs[0].relabel_configs[0].source_labels[0]=__meta_kubernetes_pod_label_name \
  --set config.scrape_configs[0].relabel_configs[0].action=keep \
  --set config.scrape_configs[0].relabel_configs[0].regex=.* \
  --set config.scrape_configs[0].relabel_configs[1].source_labels[0]=__meta_kubernetes_namespace \
  --set config.scrape_configs[0].relabel_configs[1].target_label=namespace \
  --set config.scrape_configs[0].relabel_configs[2].source_labels[0]=__meta_kubernetes_pod_name \
  --set config.scrape_configs[0].relabel_configs[2].target_label=pod
       
                             (or)

helm install promtail grafana/promtail --namespace loki --set config.clients[0].url=http://loki.loki.svc.cluster.local:3100/loki/api/v1/push --set config.scrape_configs[0].job_name=kubernetes-pods --set config.scrape_configs[0].kubernetes_sd_configs[0].role=pod --set config.scrape_configs[0].relabel_configs[0].source_labels[0]=__meta_kubernetes_pod_label_name --set config.scrape_configs[0].relabel_configs[0].action=keep --set config.scrape_configs[0].relabel_configs[0].regex=.* --set config.scrape_configs[0].relabel_configs[1].source_labels[0]=__meta_kubernetes_namespace --set config.scrape_configs[0].relabel_configs[1].target_label=namespace --set config.scrape_configs[0].relabel_configs[2].source_labels[0]=__meta_kubernetes_pod_name --set config.scrape_configs[0].relabel_configs[2].target_label=pod


